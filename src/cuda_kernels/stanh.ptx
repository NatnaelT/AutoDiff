//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-19856038
// Cuda compilation tools, release 7.5, V7.5.17
// Based on LLVM 3.4svn
//

.version 4.3
.target sm_20
.address_size 64

	// .globl	stanh

.visible .entry stanh(
	.param .u32 stanh_param_0,
	.param .f64 stanh_param_1,
	.param .u64 stanh_param_2,
	.param .u64 stanh_param_3
)
{
	.reg .pred 	%p<4>;
	.reg .b32 	%r<17>;
	.reg .f64 	%fd<77>;
	.reg .b64 	%rd<10>;


	ld.param.u32 	%r4, [stanh_param_0];
	ld.param.f64 	%fd6, [stanh_param_1];
	ld.param.u64 	%rd2, [stanh_param_2];
	ld.param.u64 	%rd3, [stanh_param_3];
	mov.u32 	%r5, %tid.x;
	mov.u32 	%r6, %ntid.x;
	mov.u32 	%r7, %ctaid.x;
	mad.lo.s32 	%r1, %r6, %r7, %r5;
	setp.ge.s32	%p1, %r1, %r4;
	@%p1 bra 	BB0_5;

	cvta.to.global.u64 	%rd4, %rd2;
	cvt.s64.s32	%rd1, %r1;
	mul.wide.s32 	%rd5, %r1, 8;
	add.s64 	%rd6, %rd4, %rd5;
	ld.global.f64 	%fd1, [%rd6];
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r2}, %fd1;
	}
	and.b32  	%r3, %r2, 2147483647;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r8, %temp}, %fd1;
	}
	mov.b64 	%fd2, {%r8, %r3};
	setp.ltu.f64	%p2, %fd2, 0d3FE1C7A398201CD6;
	@%p2 bra 	BB0_3;
	bra.uni 	BB0_2;

BB0_3:
	mul.f64 	%fd53, %fd1, %fd1;
	mov.f64 	%fd54, 0dBF2B9093D89F0E23;
	mov.f64 	%fd55, 0d3F0ABFFC9B5786C4;
	fma.rn.f64 	%fd56, %fd55, %fd53, %fd54;
	mov.f64 	%fd57, 0d3F42FA2744C30B61;
	fma.rn.f64 	%fd58, %fd56, %fd53, %fd57;
	mov.f64 	%fd59, 0dBF57CF3B9C1E491D;
	fma.rn.f64 	%fd60, %fd58, %fd53, %fd59;
	mov.f64 	%fd61, 0d3F6D6C61D450119A;
	fma.rn.f64 	%fd62, %fd60, %fd53, %fd61;
	mov.f64 	%fd63, 0dBF8226DDD44294F5;
	fma.rn.f64 	%fd64, %fd62, %fd53, %fd63;
	mov.f64 	%fd65, 0d3F9664F45C2B04A6;
	fma.rn.f64 	%fd66, %fd64, %fd53, %fd65;
	mov.f64 	%fd67, 0dBFABA1BA1AD70754;
	fma.rn.f64 	%fd68, %fd66, %fd53, %fd67;
	mov.f64 	%fd69, 0d3FC111111110295E;
	fma.rn.f64 	%fd70, %fd68, %fd53, %fd69;
	mov.f64 	%fd71, 0dBFD555555555549F;
	fma.rn.f64 	%fd72, %fd70, %fd53, %fd71;
	mul.f64 	%fd73, %fd53, %fd72;
	fma.rn.f64 	%fd76, %fd73, %fd1, %fd1;
	bra.uni 	BB0_4;

BB0_2:
	add.f64 	%fd9, %fd2, %fd2;
	mov.f64 	%fd10, 0d3FF71547652B82FE;
	mul.rn.f64 	%fd11, %fd9, %fd10;
	mov.f64 	%fd12, 0d4338000000000000;
	add.rn.f64 	%fd13, %fd11, %fd12;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r9, %temp}, %fd13;
	}
	mov.f64 	%fd14, 0dC338000000000000;
	add.rn.f64 	%fd15, %fd13, %fd14;
	mov.f64 	%fd16, 0dBFE62E42FEFA39EF;
	fma.rn.f64 	%fd17, %fd15, %fd16, %fd9;
	mov.f64 	%fd18, 0dBC7ABC9E3B39803F;
	fma.rn.f64 	%fd19, %fd15, %fd18, %fd17;
	mov.f64 	%fd20, 0d3E5AF86D8EBD13CD;
	mov.f64 	%fd21, 0d3E21F4076ACD15B6;
	fma.rn.f64 	%fd22, %fd21, %fd19, %fd20;
	mov.f64 	%fd23, 0d3E927E5092BA033D;
	fma.rn.f64 	%fd24, %fd22, %fd19, %fd23;
	mov.f64 	%fd25, 0d3EC71DDE6C5F9DA1;
	fma.rn.f64 	%fd26, %fd24, %fd19, %fd25;
	mov.f64 	%fd27, 0d3EFA01A018D034E6;
	fma.rn.f64 	%fd28, %fd26, %fd19, %fd27;
	mov.f64 	%fd29, 0d3F2A01A01B3B6940;
	fma.rn.f64 	%fd30, %fd28, %fd19, %fd29;
	mov.f64 	%fd31, 0d3F56C16C16C1B5DD;
	fma.rn.f64 	%fd32, %fd30, %fd19, %fd31;
	mov.f64 	%fd33, 0d3F8111111110F74D;
	fma.rn.f64 	%fd34, %fd32, %fd19, %fd33;
	mov.f64 	%fd35, 0d3FA555555555554D;
	fma.rn.f64 	%fd36, %fd34, %fd19, %fd35;
	mov.f64 	%fd37, 0d3FC5555555555557;
	fma.rn.f64 	%fd38, %fd36, %fd19, %fd37;
	mov.f64 	%fd39, 0d3FE0000000000000;
	fma.rn.f64 	%fd40, %fd38, %fd19, %fd39;
	mul.f64 	%fd41, %fd19, %fd40;
	fma.rn.f64 	%fd42, %fd41, %fd19, %fd19;
	shl.b32 	%r10, %r9, 20;
	add.s32 	%r11, %r10, 1072693248;
	mov.u32 	%r12, 0;
	mov.b64 	%fd43, {%r12, %r11};
	fma.rn.f64 	%fd44, %fd42, %fd43, %fd43;
	add.f64 	%fd8, %fd44, 0d3FF0000000000000;
	// inline asm
	rcp.approx.ftz.f64 %fd7,%fd8;
	// inline asm
	neg.f64 	%fd45, %fd8;
	mov.f64 	%fd46, 0d3FF0000000000000;
	fma.rn.f64 	%fd47, %fd45, %fd7, %fd46;
	fma.rn.f64 	%fd48, %fd47, %fd47, %fd47;
	fma.rn.f64 	%fd49, %fd48, %fd7, %fd7;
	neg.f64 	%fd50, %fd49;
	mov.f64 	%fd51, 0d4000000000000000;
	fma.rn.f64 	%fd52, %fd51, %fd50, %fd46;
	setp.gt.u32	%p3, %r3, 1077936127;
	selp.f64	%fd76, 0d3FF0000000000000, %fd52, %p3;

BB0_4:
	cvta.to.global.u64 	%rd7, %rd3;
	and.b32  	%r13, %r2, -2147483648;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r14}, %fd76;
	}
	or.b32  	%r15, %r14, %r13;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r16, %temp}, %fd76;
	}
	mov.b64 	%fd74, {%r16, %r15};
	mul.f64 	%fd75, %fd74, %fd6;
	shl.b64 	%rd8, %rd1, 3;
	add.s64 	%rd9, %rd7, %rd8;
	st.global.f64 	[%rd9], %fd75;

BB0_5:
	ret;
}


